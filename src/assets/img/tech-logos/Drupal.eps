%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 123 596 719 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: drupal_cymk.eps
%%CreationDate: Tue Jul 08 20:38:08 2008
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Versione 13.0.0.576
%Color profile:  Profilo generico separazioni offset
/CorelIsEPS true def
%%BeginResource: procset wCorel3Dict 3.0 0
/wCorel3Dict 300 dict def wCorel3Dict begin
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/separate_color{
SepMode_5 0 ne{[exch/colorarray_sep exch def/ink_num -1 def colorarray_sep
length 6 idiv 1 gt{colorarray_sep get_devicen_color_names dup length 1 sub 0 1
3 -1 roll{exch dup 3 -1 roll dup 3 1 roll get CurrentInkName_5 eq{/ink_num exch
def}{pop}ifelse}for pop ink_num -1 ne{colorarray_sep ink_num
get_devicen_color_spec aload pop pop SepsColor not{pop pop pop pop 1 0 0 0 5 -1
roll}if null}{0 0 0 0 0 null}ifelse}{colorarray_sep 5 get $ink_5 4 eq{
CurrentInkName_5 eq{colorarray_sep aload pop pop SepsColor not{pop pop pop pop
0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{colorarray_sep 0 get colorarray_sep
$ink_5 1 add get 3 -1 roll null eq{0 0 0 4 -1 roll SepsColor{4 $ink_5 1 add
roll}if null}{pop pop 0 0 0 0 0 null}ifelse}ifelse}ifelse]}if}bd
/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5 sub index
/colorarray_sep exch def/ink_num -1 def colorarray_sep get_devicen_color_names
dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3 1 roll get
CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1 ne{[
colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}
def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd
/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK
xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK
pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length
3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div
$dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}
for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4
div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div
$dat 3 index 2 add get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g
255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length ncolors idiv
getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll null 6
array astore currentoverprint set_current_color/$ffpnt xd}bd/currentcmykcolor{
GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd/currentrgbcolor{
currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np exit}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf
$dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix
$SDF{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np exit}ifelse
}ifelse}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S
}bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore
/$Prm xd}bd/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5
(Composite)eq{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{
CurrentInkName_5(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2
def}{CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}
ifelse}ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000
-72000 l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer
/exec cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add
def}bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{
eax}ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}if}ifelse def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse
level2{/@I_2D{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd
/$hei xd/$wid xd $ngx/scanline $wid $bts mul $ncl mul 8 div ceiling cvi string
def/readscanline{currentfile scanline readhexstring pop}bind def level3{[
/DeviceN sNamesDeviceN/DeviceCMYK{tint_params CorelTintTransformFunction}]
setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[nNumInksDeviceN{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0
gt{$hei}{0}ifelse]def/DataSource{readscanline}def currentdict end image}{
/scanline_height $lly $ury sub 1 sub $hei div def/plate_scanline $wid string
def/cmyk_scanline $wid 4 mul string def is_distilling is_rip_separation or{
/bSimDeviceN true def}{/bSimDeviceN false def}ifelse/scanline_img_dict 8 dict
begin/ImageType 1 def/Width $wid def/Height 1 def/BitsPerComponent $bts def
/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1 0 1]}ifelse def/ImageMatrix[$wid 0 0 1
neg 0 1]def/DataSource bSimDeviceN{plate_scanline}{cmyk_scanline}ifelse def
currentdict end def 0 1 $hei 1 sub{@gs/nScanIndex exch def readscanline pop
/$t_lly $ury $lly scanline_height nScanIndex mul sub sub ceiling cvi def
/$t_ury $t_lly scanline_height sub ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{
@gs/nInkIndex exch def 0 1 plate_scanline length 1 sub{dup $ncl mul nInkIndex
add scanline exch get plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex
eq{1.0}{0.0}ifelse}for]/sepTintTransformParams exch def[/Separation
sNamesDeviceN nInkIndex get/DeviceCMYK{sepTintTransformParams aload pop
tint_params CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7
dict def MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index
1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
/disable_raster_output{/@BMP load/old_raster_func exch bind def/@BMP{8 rp/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi string def 0 1 $hei 1 sub{currentfile scanline
readhexstring pop pop pop}for}def}bd/enable_raster_output{/old_raster_func
where{pop/old_raster_func load/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel3Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
132.20220 312.94261 464.04425 691.62236 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.92 0.52 0.12 0.00 null ] set_fill_color
285.21071 691.62236 m
283.98359 679.93625 282.73493 668.29521 275.11455 659.69575 c
260.09745 642.74910 239.71493 632.34312 223.09597 624.16346 c
180.81921 603.35518 132.20220 554.87225 132.20220 477.42831 c
132.20220 439.91660 146.67137 399.55323 173.97043 368.45773 c
203.03065 335.35644 246.50164 312.69231 298.12337 312.94261 c
344.26970 313.16655 382.15672 328.23241 410.64009 352.83288 c
443.95087 381.60312 464.04425 423.86117 464.04425 477.42831 c
464.04425 516.88800 452.28019 551.08602 430.85820 577.25263 c
388.61376 628.85339 354.52743 633.40101 332.96740 645.69940 c
317.53956 654.49984 303.30142 670.00252 285.21071 691.62236 C
@c
F

%SetClippingRegion: 31 points
@rs
/$fm 0 def
@gs @np 
285.21071 691.62236 m
283.98359 679.93625 282.73493 668.29521 275.11455 659.69575 c
260.09745 642.74910 239.71493 632.34312 223.09597 624.16346 c
180.81921 603.35518 132.20220 554.87225 132.20220 477.42831 c
132.20220 439.91660 146.67137 399.55323 173.97043 368.45773 c
203.03065 335.35644 246.50164 312.69231 298.12337 312.94261 c
344.26970 313.16655 382.15672 328.23241 410.64009 352.83288 c
443.95087 381.60312 464.04425 423.86117 464.04425 477.42831 c
464.04425 516.88800 452.28019 551.08602 430.85820 577.25263 c
388.61376 628.85339 354.52743 633.40101 332.96740 645.69940 c
317.53956 654.49984 303.30142 670.00252 285.21071 691.62236 C
@c
wclip @np
@sv


@rax %Note: Object
109.17978 380.32129 428.10151 716.59587 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.90 0.29 0.02 0.00 null ] set_fill_color
411.29660 611.34917 m
433.59732 577.65713 433.04570 541.15398 413.58728 509.07090 c
397.96583 483.31446 369.81213 461.69943 334.11543 436.92321 C
280.25660 399.54161 225.28318 371.26998 180.27468 383.01307 c
158.29398 388.74813 139.05865 406.05959 122.77757 432.58734 C
109.17978 713.34624 L
303.27931 716.59587 L
411.29660 611.34917 L
@c
F

@rax %Note: Object
156.18983 547.56142 290.27424 689.55364 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.35 0.05 0.06 0.00 null ] set_fill_color
283.07906 689.55364 m
292.03710 674.44866 293.30447 653.48561 283.07906 645.75609 C
278.22161 642.08466 279.28431 640.15427 281.13789 638.59805 c
284.81783 635.50857 282.16602 629.31033 278.10510 623.43213 C
255.37550 590.53153 210.81969 564.29348 184.07962 552.45883 c
176.94283 549.30047 163.30791 545.06636 159.20844 549.42576 c
148.84809 560.44318 167.53946 577.89609 178.01348 593.58728 C
260.99830 653.64208 L
283.07906 689.55364 L
@c
F

@rax %Note: Object
164.77342 561.81940 289.95080 693.92126 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.00 null ] set_fill_color
282.83641 693.92126 m
294.44457 667.64381 293.61288 652.16721 267.12680 640.05761 c
266.27868 639.66983 264.31257 637.90271 267.70791 637.22891 C
277.75984 635.23446 264.36784 619.72384 258.57184 614.33348 c
251.89427 608.12306 242.91836 598.85150 220.54649 583.85679 c
198.17461 568.86208 174.04866 558.54595 167.76198 562.77354 c
156.70488 570.20939 179.02460 589.21965 190.87370 607.78205 C
282.83641 693.92126 L
@c
F

%ClearClipping
@rs
@gr
@sv

@rax %Note: Object
132.20220 312.94261 464.04425 691.62236 @E
/$fm 0 def
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.95 0.64 0.22 0.01 null ] set_outline_color
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 2.26772 2.26772 0.00000 @w
285.21071 691.62236 m
283.98359 679.93625 282.73493 668.29521 275.11455 659.69575 c
260.09745 642.74910 239.71493 632.34312 223.09597 624.16346 c
180.81921 603.35518 132.20220 554.87225 132.20220 477.42831 c
132.20220 439.91660 146.67137 399.55323 173.97043 368.45773 c
203.03065 335.35644 246.50164 312.69231 298.12337 312.94261 c
344.26970 313.16655 382.15672 328.23241 410.64009 352.83288 c
443.95087 381.60312 464.04425 423.86117 464.04425 477.42831 c
464.04425 516.88800 452.28019 551.08602 430.85820 577.25263 c
388.61376 628.85339 354.52743 633.40101 332.96740 645.69940 c
317.53956 654.49984 303.30142 670.00252 285.21071 691.62236 C
@c
S

@rax %Note: Object
203.43600 329.79260 453.82961 475.20907 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.00 null ] set_fill_color
358.33380 433.20614 m
335.01203 433.35808 312.05537 474.11575 265.46769 475.20907 c
230.42891 476.03140 202.83279 446.66391 203.43600 418.39569 c
204.16025 384.46781 228.15354 376.35817 250.41458 376.02850 c
294.06019 375.38220 332.91298 420.00435 359.42655 420.45931 c
379.57521 420.80485 399.99657 378.65537 418.30129 377.24315 c
439.38624 375.61663 455.12532 416.46444 453.75052 441.21713 c
452.83465 457.71137 443.35616 469.55395 431.04954 469.25943 c
407.98460 468.70696 381.15269 433.05761 358.33380 433.20614 c
@c
317.95937 378.78350 m
328.02775 388.80255 338.71039 394.73376 350.71710 394.43698 c
369.88441 393.96274 370.70135 389.45962 376.25499 378.23924 c
377.38261 375.96047 376.73887 374.00117 376.01178 372.84378 c
375.61578 372.21364 373.41950 370.10891 372.67398 370.10891 c
370.82948 370.10891 370.15682 370.77250 369.39997 372.66123 c
364.82712 384.07521 358.04948 384.12425 349.50246 384.12482 c
336.33524 384.12595 330.58942 377.69811 322.81200 371.26431 c
320.87934 369.66557 319.05213 368.46170 317.59540 369.68598 c
316.42129 370.67272 315.44589 372.05178 315.47197 373.08643 c
315.53433 375.54123 316.21918 377.05181 317.95937 378.78350 c
@c
291.32901 351.54822 m
301.67603 342.00567 350.53143 333.99354 379.89468 353.73203 c
380.97666 354.45912 382.36620 354.94356 383.56441 354.43049 c
384.46186 354.04639 384.98995 353.56110 385.11156 352.55310 c
385.31112 350.89795 385.42054 348.40233 384.14126 347.33480 c
363.74967 330.31843 308.60787 320.61713 282.38202 342.26872 c
279.79483 344.40491 279.70328 347.62365 281.41143 349.48602 c
282.67824 350.86706 283.78545 351.51420 285.32409 352.39493 c
287.24003 353.49165 289.68491 353.06447 291.32901 351.54822 c
@c
F

@rax %Note: Object
130.21228 214.96961 465.30113 316.39606 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.90 0.29 0.02 0.00 null ] set_fill_color
204.34054 280.33172 m
204.34054 271.11118 l
204.34054 249.06529 194.58907 237.02457 165.62721 237.02457 c
131.06268 237.02457 l
130.59439 237.02457 130.21228 237.40668 130.21228 237.87496 c
130.21228 314.18816 l
130.21228 314.65644 130.59439 315.03855 131.06268 315.03855 c
165.63855 315.03855 l
194.12872 315.03855 204.34054 302.63329 204.34054 280.33172 c
@c
453.69099 316.38416 m
437.67865 313.79669 l
437.26394 313.72980 436.96375 313.37717 436.96375 312.95707 c
436.96375 251.47531 l
436.96375 238.30724 448.83978 234.23981 462.92683 237.63742 c
463.49291 237.77376 464.05786 237.89906 464.62110 238.01443 c
465.07465 238.10712 465.37115 238.54677 465.28696 239.00202 c
463.72252 247.46145 l
463.66753 247.75909 463.40135 247.82854 463.18564 247.82854 c
456.43748 247.82854 454.67688 247.73187 454.67688 251.47531 c
454.67688 315.54482 l
454.67688 315.80277 454.57427 316.02501 454.37783 316.19225 c
454.18139 316.35950 453.94583 316.42526 453.69099 316.38416 c
@c
369.09694 260.43165 m
369.09694 273.99118 l
369.09694 287.15981 360.20693 294.32438 341.02431 293.71720 c
321.84170 293.11002 314.34038 291.58668 314.34038 275.90769 c
314.34038 215.82085 l
314.34038 215.56290 314.44299 215.34066 314.63943 215.17342 c
314.83587 215.00617 315.07172 214.94069 315.32627 214.98151 c
331.33861 217.56898 l
331.75304 217.63559 332.05351 217.98879 332.05351 218.40860 c
332.05351 230.32545 l
332.05351 232.66800 330.41424 234.51194 330.55115 237.93761 C
335.66258 236.32413 341.57424 235.76145 348.47206 235.92756 c
356.42976 236.11918 369.09694 240.23282 369.09694 260.43165 c
@c
332.05351 247.32652 m
332.05351 275.90769 l
332.05351 281.50413 332.37723 283.07282 341.27405 283.07282 c
350.17087 283.07282 351.38381 277.81965 351.38381 273.99118 c
351.38381 257.84391 l
351.38381 249.26343 348.50891 246.08239 340.95005 246.11868 c
337.12951 246.13710 335.14044 246.74145 332.05351 247.32652 C
@c
268.26236 293.68573 m
252.25002 291.09827 l
251.83502 291.03137 251.53512 290.67902 251.53512 290.25865 c
251.53512 253.52646 l
251.53512 240.35698 263.53247 235.92699 277.49820 235.68491 c
291.46394 235.44283 305.15981 239.42466 305.15981 253.52646 c
305.15981 292.84639 l
305.15981 293.10435 305.05720 293.32658 304.86076 293.49383 c
304.66431 293.66107 304.42876 293.72683 304.17392 293.68573 c
288.16157 291.09827 l
287.74658 291.03137 287.44668 290.67902 287.44668 290.25865 c
287.44668 253.52646 l
287.44668 249.63477 285.36208 246.36132 278.22614 246.36132 c
271.09020 246.36132 269.24825 249.69770 269.24825 253.52646 c
269.24825 292.84639 l
269.24825 293.10435 269.14564 293.32658 268.94920 293.49383 c
268.75276 293.66107 268.51720 293.72683 268.26236 293.68573 c
@c
391.42035 256.43112 m
391.42035 251.06513 l
391.42035 245.79921 401.07713 245.86809 406.34306 245.87603 c
409.19783 245.88028 410.34671 246.95688 410.34671 249.87969 c
410.34671 262.03550 l
410.34671 262.28069 410.25458 262.49187 410.07487 262.65855 c
409.89515 262.82551 409.67802 262.90176 409.43339 262.88362 c
403.17250 262.41817 391.42035 262.20047 391.42035 256.43112 c
@c
374.07118 251.06513 m
374.07118 256.43112 l
374.07118 269.44554 395.69556 271.43065 409.57285 272.67987 c
410.01250 272.71956 410.34671 273.08494 410.34671 273.52658 c
410.34671 276.57071 l
410.34671 279.74098 409.18961 282.29726 404.64454 282.75817 c
396.65197 283.56860 391.83704 282.42850 380.93244 280.02189 c
380.48769 279.92381 380.04463 280.19282 379.92728 280.63304 c
377.90901 288.20183 l
377.79562 288.62702 378.02239 289.06526 378.43512 289.21833 c
385.14869 291.70687 394.03701 293.97118 403.91660 293.43458 c
413.55383 292.91131 427.45323 293.59049 427.45323 276.57071 c
427.45323 249.87969 l
427.45323 238.24290 419.11795 236.18154 400.92917 235.97461 c
387.14627 235.81786 374.07118 240.74135 374.07118 251.06513 c
@c
230.47852 237.26211 m
214.44831 237.26211 l
213.98003 237.26211 213.59792 237.64422 213.59792 238.11250 c
213.59792 286.30828 l
213.59792 286.46674 213.63477 286.60252 213.71499 286.73915 c
216.17802 290.92819 231.10696 293.05389 245.48060 292.84299 c
245.94435 292.83591 246.31824 292.45635 246.31824 291.99260 c
246.31824 282.44381 l
246.31824 282.20173 246.22866 281.99310 246.05291 281.82671 c
245.87717 281.66003 245.66428 281.58151 245.42249 281.59455 c
236.91572 282.04781 231.92135 281.11833 231.36520 279.27468 c
231.33997 279.19106 231.32891 279.11650 231.32891 279.02920 c
231.32891 238.11250 l
231.32891 237.64422 230.94680 237.26211 230.47852 237.26211 c
@c
185.05020 271.11118 m
185.05020 280.33172 l
185.05020 297.38069 179.53257 302.29115 165.63855 302.29115 c
149.50261 302.29115 L
149.50261 249.15685 L
165.62721 249.15685 l
181.94967 249.15685 185.05020 257.45811 185.05020 271.11118 c
@c
F

@rax %Note: Object
0.00000 123.30709 595.27559 718.58268 @E
/$fm 0 def
0.00000 718.58268 m
595.27559 718.58268 L
595.27559 123.30709 L
0.00000 123.30709 L
0.00000 718.58268 L
@c
N

 @gs spg @gr
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel3Dict 3.0 0
%%EOF
